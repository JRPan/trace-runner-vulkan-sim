.version 2.0
.target sm_10, map_f64_to_f32

// shader: MESA_SHADER_MISS
// inputs: 0
// outputs: 0
// uniforms: 0
// shared: 0
// decl_function main (0 params)
.entry MESA_SHADER_MISS_func1_main () {
	.reg .b64 %hitValue;
	rt_alloc_mem %hitValue, 36, 4096; // decl_var shader_call_data INTERP_MODE_NONE vec3 hitValue


	.reg .f32 %temp_f32;
	.reg .pred %temp_pred;
	.reg .f32 %const1_f32;
	mov.f32 %const1_f32, 0F3f800000;

	.reg .u32 %const0_u32;
	mov.u32 %const0_u32, 0;

	.reg .u16 %const1_u16;
	mov.u16 %const1_u16, 1;

	// start_block block_0:
	// preds: 
	.reg .f32 %ssa_0_0;
	.reg .f32 %ssa_0_1;
	.reg .f32 %ssa_0_2;
	.reg .f32 %ssa_0_3;
	mov.f32 %ssa_0_0, 0F00000000;
	mov.f32 %ssa_0_1, 0F00000000;
	mov.f32 %ssa_0_2, 0F3e4ccccd;
	mov.f32 %ssa_0_3, 0F00000000;
		// vec3 32 ssa_0 = load_const (0x00000000 /* 0.000000 */, 0x00000000 /* 0.000000 */, 0x3e4ccccd /* 0.200000 */)

	.reg .b64 %ssa_1;
	mov.b64 %ssa_1, %hitValue; // vec1 32 ssa_1 = deref_var &hitValue (shader_call_data vec3) 

	st.global.f32 [%ssa_1 + 0], %ssa_0_0;
	st.global.f32 [%ssa_1 + 4], %ssa_0_1;
	st.global.f32 [%ssa_1 + 8], %ssa_0_2;
// intrinsic store_deref (%ssa_1, %ssa_0) (7, 0) /* wrmask=xyz */ /* access=0 */


	// succs: block_1 
	// end_block block_0:
	// block block_1:
	ret ;
}
